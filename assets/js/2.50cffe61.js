(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{310:function(t,e,r){t.exports=r.p+"assets/img/1562479061766.f5b8e0d5.png"},311:function(t,e,r){t.exports=r.p+"assets/img/1562478410391.3959e895.png"},312:function(t,e,r){t.exports=r.p+"assets/img/1562479341375.d97c3dda.png"},313:function(t,e,r){t.exports=r.p+"assets/img/1562479236005.e94a1fa2.png"},314:function(t,e,r){t.exports=r.p+"assets/img/1562483076698.aeb19d4d.png"},315:function(t,e,r){t.exports=r.p+"assets/img/1562487167624.f71c9298.png"},316:function(t,e,r){t.exports=r.p+"assets/img/1562487320077.b2cf4e67.png"},317:function(t,e,r){t.exports=r.p+"assets/img/1562487328544.573bfa10.png"},318:function(t,e,r){t.exports=r.p+"assets/img/1562487749628.571afe3a.png"},319:function(t,e,r){t.exports=r.p+"assets/img/1562487760499.4efd77d1.png"},320:function(t,e,r){t.exports=r.p+"assets/img/1562488029820.d166e23d.png"},321:function(t,e,r){t.exports=r.p+"assets/img/1562488043903.94f85546.png"},339:function(t,e,r){"use strict";r.r(e);var i=[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1-数据库瓶颈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据库瓶颈","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.数据库瓶颈")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"io瓶颈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io瓶颈","aria-hidden":"true"}},[this._v("#")]),this._v(" IO瓶颈")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"cpu瓶颈"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpu瓶颈","aria-hidden":"true"}},[this._v("#")]),this._v(" CPU瓶颈")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2-分库分表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-分库分表","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.分库分表")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"水平分表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#水平分表","aria-hidden":"true"}},[this._v("#")]),this._v(" 水平分表")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(310),alt:"水平分表"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("概念")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每个表的结构都是一样")]),this._v(" "),e("li",[this._v("每个库的数据不一样，没有交集")]),this._v(" "),e("li",[this._v("所有表的并集是全量数据")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("场景")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("分析")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"水平分库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#水平分库","aria-hidden":"true"}},[this._v("#")]),this._v(" 水平分库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(311),alt:"水平分库"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("概念")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每个库的数据库结构都是一样")]),this._v(" "),e("li",[this._v("每个库的数据不一样，没有交集")]),this._v(" "),e("li",[this._v("所有库的并集是全量数据")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("场景")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("分析")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"垂直分表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#垂直分表","aria-hidden":"true"}},[this._v("#")]),this._v(" 垂直分表")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(312),alt:"垂直分表"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("概念")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每个表的结构都不一样；")]),this._v(" "),e("li",[this._v("每个表的数据也不一样，一般来说，每个表的字段至少有一列交集，一般是主键，用于关联数据；")]),this._v(" "),e("li",[this._v("所有表的并集是全量数据；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("场景")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("分析")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"垂直分库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#垂直分库","aria-hidden":"true"}},[this._v("#")]),this._v(" 垂直分库")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(313),alt:"垂直分库"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("概念")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"2"}},[e("li",[this._v("结果")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("每个库的结构都不一样；")]),this._v(" "),e("li",[this._v("每个库的数据也不一样，没有交集；")]),this._v(" "),e("li",[this._v("所有库的并集是全量数据；")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"3"}},[e("li",[this._v("场景")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",{attrs:{start:"4"}},[e("li",[this._v("分析")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3-分库分表工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-分库分表工具","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.分库分表工具")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_4-分库分表步骤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-分库分表步骤","aria-hidden":"true"}},[this._v("#")]),this._v(" 4.分库分表步骤")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_5-分库分表问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-分库分表问题","aria-hidden":"true"}},[this._v("#")]),this._v(" 5.分库分表问题")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_1-非partition-key的查询问题（水平分库分表，拆分策略为常用的hash法）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-非partition-key的查询问题（水平分库分表，拆分策略为常用的hash法）","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 非partition key的查询问题（水平分库分表，拆分策略为常用的hash法）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"端上除了partition-key只有一个非partition-key作为条件查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端上除了partition-key只有一个非partition-key作为条件查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 端上除了partition key只有一个非partition key作为条件查询")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("映射法\n"),e("img",{attrs:{src:r(314),alt:""}})]),this._v(" "),e("li",[this._v("基因法\n"),e("img",{attrs:{src:r(315),alt:"enter description here"}})])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-端上除了partition-key不止一个非partition-key作为条件查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-端上除了partition-key不止一个非partition-key作为条件查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.端上除了partition key不止一个非partition key作为条件查询")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("映射法\n"),e("img",{attrs:{src:r(316),alt:"enter description here"}})]),this._v(" "),e("li",[this._v("冗余法\n"),e("img",{attrs:{src:r(317),alt:"enter description here"}})])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-后台除了partition-key还有各种非partition-key组合条件查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-后台除了partition-key还有各种非partition-key组合条件查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.后台除了partition key还有各种非partition key组合条件查询")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("NoSQL法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(318),alt:"enter description here"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("冗余法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(319),alt:"enter description here"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-非partition-key跨库跨表分页查询问题（水平分库分表，拆分策略为常用的hash法）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-非partition-key跨库跨表分页查询问题（水平分库分表，拆分策略为常用的hash法）","aria-hidden":"true"}},[this._v("#")]),this._v(" 4.非partition key跨库跨表分页查询问题（水平分库分表，拆分策略为常用的hash法）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_5-扩容问题（水平分库分表，拆分策略为常用的hash法）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-扩容问题（水平分库分表，拆分策略为常用的hash法）","aria-hidden":"true"}},[this._v("#")]),this._v(" 5.扩容问题（水平分库分表，拆分策略为常用的hash法）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("水平扩容库（升级从库法）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(320),alt:"enter description here"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("水平扩容表（双写迁移法）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:r(321),alt:"enter description here"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第一步：（同步双写）应用配置双写，部署；"),e("br"),this._v("\n第二步：（同步双写）将老库中的老数据复制到新库中；"),e("br"),this._v("\n第三步：（同步双写）以老库为准校对新库中的老数据；"),e("br"),this._v("\n第四步：（同步双写）应用去掉双写，部署；"),e("br"),this._v("\n注：双写是通用方案。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_6-分库分表总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-分库分表总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 6.分库分表总结")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("分库分表，首先得知道瓶颈在哪里，然后才能合理地拆分（分库还是分表？水平还是垂直？分几个？）。且不可为了分库分表而拆分。")]),this._v(" "),e("li",[this._v("选key很重要，既要考虑到拆分均匀，也要考虑到非partition key的查询。")]),this._v(" "),e("li",[this._v("只要能满足需求，拆分规则越简单越好。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_7-分库分表实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-分库分表实例","aria-hidden":"true"}},[this._v("#")]),this._v(" 7.分库分表实例")])}],s=r(1),a=Object(s.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),r("p",[t._v("不管是IO瓶颈，还是CPU瓶颈，最终都会导致数据库的活跃连接数增加，进而逼近甚至达到数据库可承载活跃连接数的阈值。在业务Service来看就是，可用数据库连接少甚至无连接可用。接下来就可以想象了吧（并发量、吞吐量、崩溃）。")]),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("第一种：磁盘读IO瓶颈，热点数据太多，数据库缓存放不下，每次查询时会产生大量的IO，降低查询速度 -> 分库和垂直分表。")]),t._v(" "),r("p",[t._v("第二种：网络IO瓶颈，请求的数据太多，网络带宽不够 -> 分库。")]),t._v(" "),t._m(2),t._v(" "),r("p",[t._v("第一种：SQL问题，如SQL中包含join，group by，order by，非索引字段条件查询等，增加CPU运算的操作 -> SQL优化，建立合适的索引，在业务Service层进行业务计算。")]),t._v(" "),r("p",[t._v("第二种：单表数据量太大，查询时扫描的行太多，SQL效率低，CPU率先出现瓶颈 -> 水平分表。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),r("p",[t._v("以字段为依据，按照一定策略（hash、range等），将一个表中的数据拆分到多个表中。")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),r("p",[t._v("系统绝对并发量并没有上来，只是单表的数据量太多，影响了SQL效率，加重了CPU负担，以至于成为瓶颈。")]),t._v(" "),t._m(10),t._v(" "),r("p",[t._v("表的数据量少了，单次SQL执行效率高，自然减轻了CPU的负担。")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),r("p",[t._v("以字段为依据，按照一定策略（hash、range等），将一个库中的数据拆分到多个库中。")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),r("p",[t._v("系统绝对并发量上来了，分表难以根本上解决问题，并且还没有明显的业务归属来垂直分库。")]),t._v(" "),t._m(17),t._v(" "),r("p",[t._v("库多了，io和cpu的压力自然可以成倍缓解。")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),r("p",[t._v("以字段为依据，按照字段的活跃性，将表中字段拆到不同的表（主表和扩展表）中。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),r("p",[t._v("系统绝对并发量并没有上来，表的记录并不多，但是字段多，并且热点数据和非热点数据在一起，单行数据所需的存储空间较大。以至于数据库缓存的数据行减少，查询时会去读磁盘数据产生大量的随机读IO，产生IO瓶颈。")]),t._v(" "),t._m(24),t._v(" "),r("p",[t._v("可以用列表页和详情页来帮助理解。垂直分表的拆分原则是将热点数据（可能会冗余经常一起查询的数据）放在一起作为主表，非热点数据放在一起作为扩展表。这样更多的热点数据就能被缓存下来，进而减少了随机读IO。拆了之后，要想获得全部数据就需要关联两个表来取数据。但记住，千万别用join，因为join不仅会增加CPU负担并且会讲两个表耦合在一起（必须在一个数据库实例上）。关联数据，应该在业务Service层做文章，分别获取主表和扩展表数据然后用关联字段关联得到全部数据。")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),r("p",[t._v("以表为依据，按照业务归属不同，将不同的表拆分到不同的库中。")]),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),r("p",[t._v("系统绝对并发量上来了，并且可以抽象出单独的业务模块。")]),t._v(" "),t._m(31),t._v(" "),r("p",[t._v("到这一步，基本上就可以服务化了。例如，随着业务的发展一些公用的配置表、字典表等越来越多，这时可以将这些表拆到单独的库中，甚至可以服务化。再有，随着业务的发展孵化出了一套业务模式，这时可以将相关的表拆到单独的库中，甚至可以服务化。")]),t._v(" "),t._m(32),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://shardingsphere.apache.org/index_zh.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sharding-sphere"),r("OutboundLink")],1),t._v("：jar，前身是sharding-jdbc；")]),t._v(" "),r("li",[r("a",{attrs:{href:"http://www.mycat.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mycat"),r("OutboundLink")],1),t._v("：中间件。")])]),t._v(" "),r("p",[t._v("注：工具的利弊，请自行调研，官网和社区优先。")]),t._v(" "),t._m(33),t._v(" "),r("p",[t._v("根据容量（当前容量和增长量）评估分库或分表个数 -> 选key（均匀）-> 分表规则（hash或range等）-> 执行（一般双写）-> 扩容问题（尽量减少数据的移动）。")]),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),r("p",[t._v("注：写入时，基因法生成userid，如图。关于xbit基因，例如要分8张表，23=8，故x取3，即3bit基因。根据userid查询时可直接取模路由到对应的分库或分表。根据username查询时，先通过usernamecode生成函数生成username_code再对其取模路由到对应的分库或分表。id生成常用snowflake算法。")]),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),r("p",[t._v("注：按照orderid或buyerid查询时路由到dbobuyer库中，按照sellerid查询时路由到dbo_seller库中。感觉有点本末倒置！有其他好的办法吗？改变技术栈呢？")]),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),r("p",[t._v("注：用NoSQL法解决（ES等）。")]),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54)])},i,!1,null,null,null);e.default=a.exports}}]);